---
- hosts: all
  become: true
  tasks:
  - name: Use MAC address for DHCP
    lineinfile:
      path: /etc/netplan/01-netcfg.yaml
      regexp: 'dhcp-identifier:'
      insertafter: 'dhcp4:'
      line: '      dhcp-identifier: mac'

  - name: Remove boot delay
    lineinfile:
      path: /etc/default/grub
      insertafter: EOF
      line: GRUB_RECORDFAIL_TIMEOUT=0

  - name: Update grub
    command: update-grub

  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
      state: present

  - name: Install docker and its dependencies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
    notify:
      - docker status

  - name: Hold docker
    dpkg_selections:
      name: docker-ce
      selection: hold

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl

  - name: Hold Kubernetes installs
    dpkg_selections:
      name: "{{ item }}"
      selection: hold
    with_items:
      - kubelet 
      - kubeadm 
      - kubectl

  - name: Load modules for Mayastor
    blockinfile:
      path: /etc/modules-load.d/mayastor.conf
      create: yes
      owner: root
      group: root
      mode: '0644'
      block: |
        nvme-tcp
        xfs

  - name: Install NVMe cli
    apt: 
      name: nvme-cli
      state: present
      update_cache: yes

  handlers:
    - name: docker status
      service: name=docker state=started
